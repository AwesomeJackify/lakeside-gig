---
import { Icon } from "astro-icon/components";

import Layout from "../layouts/Layout.astro";
import config from "../data/config.json";

import { createClient } from "../utils";
import getCollectionByIdQuery from "../queries/getCollectionByIdQuery";
import { Image } from "astro:assets";

import hero1 from "../assets/images/hero1.jpg";
import hero2 from "../assets/images/hero2.jpg";
import hero3 from "../assets/images/hero3.png";
import hero4 from "../assets/images/hero4.png";

const heroImages = [hero1, hero2, hero3, hero4];

// get the collection that is shown on the home page
const { data } = await createClient(
  import.meta.env.SHOPIFY_PUBLIC_ACCESS_TOKEN
).request(getCollectionByIdQuery, {
  variables: {
    id: "gid://shopify/Collection/271423144007",
  },
});

// parse the home page collection data
const homePageCollectionName = data.collection.title;
console.log(homePageCollectionName);

const homePageProducts = data.collection.products.edges.map((product: any) => {
  return {
    id: product.node.id,
    title: product.node.title,
    handle: product.node.handle,
    images: product.node.images,
    imageUrl: product.node.featuredImage.url,
    variants: product.node.variants.edges.map((variant: any) => {
      return {
        id: variant.node.id,
        title: variant.node.title,
      };
    }),
  };
});
---

<Layout title={config.businessName} description={config.description}>
  <div class="flex flex-col gap-16">
    <section
      class="w-full h-[500px] grid grid-cols-4 max-md:h-96 max-md:grid-cols-2"
    >
      {
        heroImages.map((heroImage, index) => (
          <Image
            src={heroImage}
            alt="Hero image"
            loading={"eager"}
            class={`h-full w-full object-cover ${
              index > 1 ? "max-md:hidden" : ""
            }`}
          />
        ))
      }
    </section>
    <section class="flex flex-col gap-16">
      <h1 class="text-center text-4xl">{homePageCollectionName}</h1>
      <div class="grid grid-cols-2 px-4 gap-4">
        {
          homePageProducts.map((product: any) => (
            <a
              href={`/shop/${product.handle}`}
              class="flex flex-col group relative"
            >
              <Image
                inferSize
                src={product.imageUrl}
                alt={product.title}
                class="h-full w-full object-cover"
              />
              {product.images.edges.length > 1 && (
                <Image
                  inferSize
                  src={product.images.edges[1].node.url}
                  alt={product.title}
                  class="h-full w-full object-cover opacity-0 group-hover:opacity-100 absolute z-10 transition duration-300"
                />
              )}
            </a>
          ))
        }
      </div>
    </section>
  </div>
</Layout>
